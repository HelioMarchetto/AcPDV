unit acpdv.model.caixa;

interface

uses
  System.SysUtils,
  System.TypInfo;

type

  TTurno = (MANHA, TARDE, NOITE);

  TTurnoHelper = record helper for TTurno
    function ToString: String;
    function TEnum(Value: String): TTurno;
    function RetornaTurno(Value: TDateTime): TTurno;
  end;


  TCaixa = class
    private
    FID: Integer;
    FCaixa: Integer;
    FTurno: TTurno;
    FOperador: String;
    FSupervisor: String;
    FAberto: boolean;
    FDataHoraAbertura: TDateTime;
    FSaldoInicial: Currency;
    public
      property ID: Integer read FID write FID;
      property Caixa: Integer read FCaixa write FCaixa;
      property Turno: TTurno read FTurno write FTurno;
      property Operador: String read FOperador write FOperador;
      property Supervisor: String read FSupervisor write FSupervisor;
      property Aberto: boolean read FAberto write FAberto;
      property DataHoraAbertura: TDateTime read FDataHoraAbertura write FDataHoraAbertura;
      property SaldoInicial: Currency read FSaldoInicial write FSaldoInicial;
      class function New: TCaixa;
  end;

implementation

{ TCaixa }

class function TCaixa.New: TCaixa;
begin
  Result := Self.Create;
end;

{ TTurnoHelper }

function TTurnoHelper.RetornaTurno(Value: TDateTime): TTurno;
begin
  if (Value >= StrToTime('06:00:00')) and
      (Value <= StrToTime('11:59:59')) then
      Result := MANHA;

  if (Value >= StrToTime('12:00:00')) and
      (Value <= StrToTime('17:59:59')) then
      Result := TARDE;

  if (Value >= StrToTime('17:00:00')) and
      (Value <= StrToTime('23:59:59')) then
      Result := NOITE;
end;

function TTurnoHelper.TEnum(Value: String): TTurno;
begin

end;

function TTurnoHelper.ToString: String;
begin

end;

end.
